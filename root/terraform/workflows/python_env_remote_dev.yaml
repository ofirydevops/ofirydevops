name: python_env_remote_dev

on:
  workflow_dispatch:
    inputs:
      git_user_email:
        description: 'Git user email (Optional)'
        type: string
        required: false
      uptime_in_minutes:
        description: "Max uptime in minutes for Conda run"
        type: choice
        options: [10, 20 , 40, 80]
        required: true
      py_env_file:
        description: "Python environment file"
        type: choice
        options:
          - python_env_runner/conda_envs_v2/ofiry.yaml
          - python_env_runner/conda_envs_v2/py310_gpu.yaml
          - python_env_runner/conda_envs_v2/py310_full.yaml
        required: true
      node:
        description: "Runner node"
        type: choice
        options:
          - basic_amd64_100GB
          - basic_arm64_100GB
          - gpu_amd64_100GB
        required: true

env:
  MAX_UPTIME: 80
  DOCKER_IMAGE_TAG: ${{ github.run_id }}-${{ github.run_number }}

jobs:
  build_and_run:
    runs-on:
      - self-hosted
      - ${{ github.event.inputs.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ofirydevops/ofirydevops
          ref: v0.0.0

      - name: Validate Uptime
        run: |
          UPTIME_IN_MINUTES=${{ github.event.inputs.uptime_in_minutes }}
          if [ "$UPTIME_IN_MINUTES" -gt "${{ env.MAX_UPTIME }}" ]; then
            UPTIME_IN_MINUTES=${{ env.MAX_UPTIME }}
          fi
          echo "UPTIME_IN_MINUTES=$UPTIME_IN_MINUTES" >> $GITHUB_ENV

      - name: Pipenv Install
        run: pipenv install
            
      - name: Get Public IP
        id: get_public_ip
        run: |
          IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
          echo "Public IP: $IP"
          echo "public_ip=$IP" >> $GITHUB_OUTPUT

      - name: Build Conda Env Docker
        run: |
            pipenv run python3.10 -u -m python_env_runner.scripts.build_py_env \
                                            --py-env-conf-file ${{ github.event.inputs.py_env_file }} \
                                            --docker-image-tag ${{ env.DOCKER_IMAGE_TAG }} \
                                            --target remote_dev \
                                            --git-ref ${{ github.ref_name }} \
                                            --git-user-email ${{ github.event.inputs.git_user_email }}

      - name: Run Conda Env
        run: |
          TIMEOUT_SECONDS=$(( ${{ env.UPTIME_IN_MINUTES }} * 60 ))
          echo "For remote development run ssh command: ssh root@${{ steps.get_public_ip.outputs.public_ip }} -p 5000"
          timeout $TIMEOUT_SECONDS \
          pipenv run python3.10 -u -m python_env_runner.scripts.run_py_env \
                                        --remote-dev \
                                        --docker-image-tag ${{ env.DOCKER_IMAGE_TAG }} || true


